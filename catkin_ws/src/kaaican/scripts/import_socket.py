import socket


# 서버의 주소입니다. hostname 또는 ip address를 사용할 수 있습니다.
HOST = '210.123.37.179'  
# 서버에서 지정해 놓은 포트 번호입니다. 
PORT_1 = 1000 #SpeedMeterPlugin      
PORT_2 = 1500 #SpeedMeterPlugin      


# 소켓 객체를 생성합니다. 
# 주소 체계(address family)로 IPv4, 소켓 타입으로 TCP 사용합니다.  
client_socket_1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket_2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# 지정한 HOST와 PORT를 사용하여 서버에 접속합니다. 
client_socket_1.connect((HOST, PORT_1))
client_socket_2.connect((HOST, PORT_2))

#딥러닝 모델 output 데이터
#aggressive
maneuver  = '2'
Output_points = '4405.53,6505.2,4403.53,6505.2,4401.53,6505.2,4399.53,6505.2,4398.24,6505.2,4396.95,6505.2,4395.67,6505.199,4394.39,6505.184,4393.11,6505.126,4391.84,6505.018,4390.58,6504.868,4389.32,6504.7,4388.05,6504.54,4386.79,6504.39,4385.52,6504.245,4384.26,6504.097,4383,6503.946,4381.74,6503.795,4380.48,6503.646,4379.22,6503.498,4377.97,6503.351,4376.71,6503.203,4375.46,6503.055,4374.21,6502.91,4372.96,6502.777,4371.7,6502.663,4370.45,6502.563,4369.2,6502.466,4367.95,6502.365,4365.95,6502.365,4363.95,6502.365,4361.95,6502.365,4359.95,6502.365,4357.95,6502.365,4355.95,6502.365,4353.95,6502.365'
#Output_points = '4303.46,6505.426,4300.58,6505.476,4298.78,6505.51,4296.98,6505.547,4295.18,6505.587,4293.39,6505.63,4291.59,6505.677,4289.8,6505.727,4288,6505.779,4286.21,6505.835,4284.41,6505.895,4282.62,6505.959,4280.83,6506.027,4279.03,6506.098,4277.24,6506.164,4275.45,6506.222,4273.66,6506.273,4271.87,6506.316,4270.08,6506.351,4268.3,6506.379,4266.52,6506.399,4264.74,6506.413,4262.96,6506.42,4261.19,6506.42,4259.41,6506.417,4257.64,6506.41,4255.87,6506.403,4254.1,6506.396,4252.34,6506.388,4250.58,6506.384,4248.82,6506.385,4247.06,6506.393,4245.3,6506.41,4243.55,6506.438,4241.8,6506.48,4240.05,6506.537,4238.3,6506.609,4236.56,6506.696,4234.82,6506.799,4233.09,6506.917,4231.35,6507.05,4229.62,6507.199,4227.9,6507.363,4226.18,6507.544,4224.46,6507.744,4222.75,6507.962,4221.04,6508.199,4219.33,6508.454,4217.63,6508.724,4215.94,6509.003,4214.24,6509.286,4212.55,6509.57,4210.86,6509.856,4209.18,6510.144,4207.49,6510.431,4205.81,6510.719,4204.13,6511.008,4202.45,6511.298,4200.77,6511.592,4199.1,6511.895,4197.44,6512.208,4195.77,6512.532,4194.11,6512.868,4192.46,6513.218,4190.85,6513.587,4189.26,6513.976'
#defensive
client_socket_1.sendall(maneuver.encode())
client_socket_2.sendall(Output_points.encode())

#client_socket_1.close
#client_socket_2.close
